.TH man 3 "14 April 2017" "0.01" "shell man page"
.SH NAME
.B simple_shell
- simple command interpreter
.SH SYNOPSIS
simple_shell [command]...

.SH DESCRIPTION
.B simple_shell
simple_shell is an sh-compatible command language interpreter that executes commands read from the standard input. simple_shell is intended to be a conformant implementation of the Shell and Utilities portion of the IEEE POSIX specification (IEEE Standard 1003.1). simple_shell can be configured to be POSIX-conformant by default.

.SH OVERVIEW
Simple_shell is executing commands read from a terminal, interprets them and executes the command. The simple_shell is a command that reads lines from either a file or the terminal, interprets them, and generally executes other commands.  It is the program that is running when the user runs gcc -Wall -Werror -Wextra -pedantic *.c -o hsh and runs the executable file, ./hsh. The simple_shell implements a language that has flow control constructs, a macro facility that provides a variety of features in addition to data storage, along with built in history and line editing capabilities.  It incorporates many features to aid interactive use and has the advantage that the interpretative language is common to both interactive and non-interactive use (shell scripts).  That is, commands can be typed directly to the running shell or can be put into a file and the file can be executed directly by the shell.

.SH INVOCATIONLS

The simple_shell is initiated by using ./hsh

.SH SIMPLE COMMANDS
    A simple command is a sequance of non blank words separated by space or a tab. A first word specifies the name of the command. If a simple command has been recognized, the simple_shell will do following:
    - the first word (command)is located and executed.
    - remaining words are treated as arguments to the command

.SH PROMPTING
    When used interactively, the shell prompts with the value
.I myShell$
before reading a command.

.SH ENVIRONMENT
    The environment is a list of name-value pairs that is passed to an executed program. On invocation, the shell scans the environment and creates a parameter for each name found, giving it the corresponding value.


.SH BUILTIN COMMANDS

.B exit
[n] - terminates the shell process with the exit status of n.

.B env
- prints out a list of environment variables

.B setenv [VARIABLE] [VALUE]
- The setenv() built-in adds the variable name to the environment with the value value, if name does not already exist. If name does exist in the environment, then its value is changed to value if overwrite is nonzero; if overwrite is zero, then the value of name is not changed. This function makes copies of the strings pointed to by name and value.

.SH SEE ALSO
    env(1), exec(2)

.SH OPTIONS
.B simple_shell
does not take any options

.SH BUGS
Probably quite a few bugs.

.SH AUTHOR
Megha Mohan, Halina Veratsennik
